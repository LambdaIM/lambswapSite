{"version":3,"sources":["webpack:///./src/contacthelp/useContract.js"],"names":["useContract","library","account","address","ABI","withSignerIfPossible","getContract","undefined","error","useTokenContract","tokenAddress","ERC20_ABI","usePairContract","IUniswapV2PairABI","useExchangeRatesContract","ABI_ExchangeRates","useSynthetixRewardContract","ABI_SynthetixReward","useproxyActionsContract","ABI_proxyActions","useCollateralContract","ABI_Collateral","useProxyContract","ABI_Proxy","useCollateralStateContract","ABI_CollateralState","useErc20LambdaContract","ABI_ERC20_LAMBDA","useAirDropContract","ABI_AirDrop"],"mappings":"6whBAAA,+hBA4DA,SAASA,EACPC,EACAC,EACAC,EACAC,GAEA,IADAC,IACA,yDACA,IAAKF,IAAYC,IAAQH,EAAS,OAAO,KACzC,IAEE,OAAOK,eACLH,EACAC,EACAH,EACAI,GAAwBH,EAAUA,OAAUK,GAE9C,MAAOC,GAEP,OAAO,MAIJ,SAASC,EACdR,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAC,EACAN,GAuCG,SAASO,EACdX,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAG,SACAR,GAqDG,SAASS,EACdb,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAK,EACAV,GAIG,SAASW,EACdf,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAO,EACAZ,GAsBG,SAASa,EACdjB,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAS,EACAd,GAIG,SAASe,EACdnB,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAW,EACAhB,GAoBG,SAASiB,EACdrB,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAa,EACAlB,GAIG,SAASmB,EACdvB,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAe,EACApB,GAIG,SAASqB,EACdzB,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAiB,EACAtB,GAIG,SAASuB,EACd3B,EACAC,EACAQ,EACAL,GAGA,OAAOL,EACLC,EACAC,EACAQ,EACAmB,EACAxB,K","file":"js/chunk-b6c9b960.a343cc3c.js","sourcesContent":["import { Contract } from \"@ethersproject/contracts\";\n// import { abi as GOVERNANCE_ABI } from '@uniswap/governance/build/GovernorAlpha.json'\n// import { abi as UNI_ABI } from '@uniswap/governance/build/Uni.json'\n// import { abi as STAKING_REWARDS_ABI } from '@uniswap/liquidity-staker/build/StakingRewards.json'\n// import { abi as MERKLE_DISTRIBUTOR_ABI } from '@uniswap/merkle-distributor/build/MerkleDistributor.json'\nimport { ChainId, WETH } from \"@webfans/uniswapsdk\";\n// import { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\n// import { useMemo } from 'react'\n// import { GOVERNANCE_ADDRESS, MERKLE_DISTRIBUTOR_ADDRESS, UNI } from '../constants'\n// import {\n//   ARGENT_WALLET_DETECTOR_ABI,\n//   ARGENT_WALLET_DETECTOR_MAINNET_ADDRESS\n// } from '../constants/abis/argent-wallet-detector'\n// import ENS_PUBLIC_RESOLVER_ABI from '../constants/abis/ens-public-resolver.json'\n// import ENS_ABI from '../constants/abis/ens-registrar.json'\n// import { ERC20_BYTES32_ABI } from '../constants/abis/erc20'\n\nimport ERC20_ABI from \"../constants/abis/erc20.json\";\nimport ERC20_ABI_LAMB from \"../constants/abis/erc20lamb.json\";\n\nimport ERC20_ABI_tlambbar from \"../constants/abis/mLAMBBar.json\";\n\n// import { MIGRATOR_ABI, MIGRATOR_ADDRESS } from '../constants/abis/migrator'\n// import UNISOCKS_ABI from '../constants/abis/unisocks.json'\n// import WETH_ABI from '../constants/abis/weth.json'\n// import { MULTICALL_ABI, MULTICALL_NETWORKS } from '../constants/multicall'\n// import { V1_EXCHANGE_ABI, V1_FACTORY_ABI, V1_FACTORY_ADDRESSES } from '../constants/v1'\nimport { getContract } from \"./utils.js\";\n// import { useActiveWeb3React } from './index'\n\nimport { abi as IUniswapV2PairABI } from \"@uniswap/v2-core/build/IUniswapV2Pair.json\";\n\nimport ERC20_ABI_StakingRewards from \"../constants/abis/StakingRewards.json\";\n\n// import ERC20_ABI_Synthetix from \"../constants/abis/Synthetix.json\";\n\nimport ABI_SynthetixProxy from \"../constants/abis/SynthetixProxy.json\";\n\nimport ABI_ExchangeRates from \"../constants/abis/ExchangeRates.json\";\n\nimport ABI_SynthetixReward from \"../constants/abis/SynthetixReward.json\";\n\n// import ABI_SynthetixState from \"../constants/abis/SynthetixState.json\";\n\nimport ABI_Collateral from \"../constants/abis/Collateral.json\";\n\nimport ABI_proxyActions from \"../constants/abis/proxyActions.json\";\n\nimport ABI_rewarder from \"../constants/abis/rewarder.json\";\n\nimport ABI_Proxy from \"../constants/abis/Proxy.json\";\n\nimport ABI_CollateralState from \"../constants/abis/CollateralState.json\";\n\nimport ABI_ERC20_LAMBDA from \"../constants/abis/erc20lambda.json\";\n\nimport ABI_AirDrop from \"../constants/abis/AirDrop.json\";\n\n\n// returns null on errors\nfunction useContract(\n  library,\n  account,\n  address,\n  ABI,\n  withSignerIfPossible = true\n) {\n  if (!address || !ABI || !library) return null;\n  try {\n    // return new web3.eth.Contract(ABI,address)\n    return getContract(\n      address,\n      ABI,\n      library,\n      withSignerIfPossible && account ? account : undefined\n    );\n  } catch (error) {\n    console.error(\"Failed to get contract\", error);\n    return null;\n  }\n}\n\nexport function useTokenContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n  console.info(\"- -useTokenContract\");\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ERC20_ABI,\n    withSignerIfPossible\n  );\n}\n\nexport function useTlambbarContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n  console.info(\"- -useTlambbarContract\");\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ERC20_ABI_tlambbar,\n    withSignerIfPossible\n  );\n}\n\n\n//ERC20_ABI_tlambbar\n\nexport function uselambdaTokenContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n  console.info(\"- -useTokenContract\");\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ERC20_ABI_LAMB,\n    withSignerIfPossible\n  );\n}\n\nexport function usePairContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n  console.info(\"- -useTokenContract\");\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    IUniswapV2PairABI,\n    withSignerIfPossible\n  );\n}\n\nexport function useStakingRewardsContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n  console.info(\"- -useTokenContract\");\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ERC20_ABI_StakingRewards,\n    withSignerIfPossible\n  );\n}\n\nexport function useSynthetixProxyContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n  console.info(\"- -useTokenContract\");\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_SynthetixProxy,\n    withSignerIfPossible\n  );\n}\n\n// export function useSynthetixContract(\n//   library,\n//   account,\n//   tokenAddress,\n//   withSignerIfPossible\n// ) {\n//   console.info(\"- -useTokenContract\");\n//   return useContract(\n//     library,\n//     account,\n//     tokenAddress,\n//     ERC20_ABI_Synthetix,\n//     withSignerIfPossible\n//   );\n// }\n\n\nexport function useExchangeRatesContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n  console.info(\"- -useTokenContract\");\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_ExchangeRates,\n    withSignerIfPossible\n  );\n}\n\nexport function useSynthetixRewardContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n  console.info(\"- -useTokenContract\");\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_SynthetixReward,\n    withSignerIfPossible\n  );\n}\n\n\n\n// export function useSynthetixStateContract(\n//   library,\n//   account,\n//   tokenAddress,\n//   withSignerIfPossible\n// ) {\n//   console.info(\"- -useTokenContract\");\n//   return useContract(\n//     library,\n//     account,\n//     tokenAddress,\n//     ABI_SynthetixState,\n//     withSignerIfPossible\n//   );\n// }\n\nexport function useproxyActionsContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_proxyActions,\n    withSignerIfPossible\n  );\n}\n\nexport function useCollateralContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_Collateral,\n    withSignerIfPossible\n  );\n}\n\nexport function useRewarderCollateralContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_rewarder,\n    withSignerIfPossible\n  );\n}\n\nexport function useProxyContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_Proxy,\n    withSignerIfPossible\n  );\n}\n\nexport function useCollateralStateContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_CollateralState,\n    withSignerIfPossible\n  );\n}\n\nexport function useErc20LambdaContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_ERC20_LAMBDA,\n    withSignerIfPossible\n  );\n}\n\nexport function useAirDropContract(\n  library,\n  account,\n  tokenAddress,\n  withSignerIfPossible\n) {\n\n  return useContract(\n    library,\n    account,\n    tokenAddress,\n    ABI_AirDrop,\n    withSignerIfPossible\n  );\n}\n\n\n//ABI_rewarder\n\n//ABI_proxyActions     ABI_Collateral\n\n\n"],"sourceRoot":""}